#!/usr/bin/env perl

use strict;
use warnings;

use 5.010001;

use FindBin qw( $Bin );
use lib "$Bin/../lib";

use GoDutch;

use Data::Dumper;
use File::Spec;
use Getopt::Long;



$| = 1;



my $function    = $ENV{GODUTCH_FUNCTION};
my $includes    = [ split( ":", $ENV{GODUTCH_INC} // "" ) ];
my $module      = $ENV{GODUTCH_MODULE};
my $socket_path = $ENV{GODUTCH_SOCKET_PATH} // $ENV{GODUTCH_SOCKET_PATH};

GetOptions( 
    "include|I=s@" => \$includes,
    "function=s"   => \$function,
    "module=s"     => \$module,
    "socket|s=s"   => \$socket_path
) or die "Error in command line arguments\n";

die "--module is mandatory"
    if !$module;

die "--function is mandatory"
    if !$function;

die "Socket path, either via GODUTCH_SOCKET_PATH or -s is mandatory"
    if !$socket_path;

unlink $socket_path
    if -e $socket_path;

push @INC, File::Spec->rel2abs($_)
    for @$includes;

eval "require $module; 1" or do {
    die $!;
};

my $function_ref = $module->can($function);

die "Couldn't find $function in $module"
    if !$function_ref;

my $available_checks = $function_ref->();

my $godutch = GoDutch->new(
    socket_path      => $socket_path,
    available_checks => $available_checks,
);

$SIG{INT} = sub {
    unlink $socket_path if -e $socket_path;
    exit(0);
};

$SIG{__DIE__} = sub {
    unlink $socket_path if -e $socket_path;
};

$godutch->start;
